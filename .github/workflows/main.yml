on:
  workflow_dispatch:
  push:
    branches:
    - main

name: Create release
jobs:
  build_linux_musl_arm64:
    name: linux musl ${{matrix.architecture}} static
    container:
      image: alpine:3.18
      volumes:
        - /opt:/opt:rw,rshared
        - /opt:/__e/node24:ro,rshared
    runs-on: ubuntu-24.04-arm
    

    strategy:
      fail-fast: false
      matrix:
        architecture: [ x64 ]

    steps:
    - name: Allow Linux musl containers on ARM64 runners
      run: |
        sed -i "/^ID=/s/alpine/NotpineForGHA/" /etc/os-release
        apk add nodejs --update-cache
        mkdir /opt/bin
        ln -s /usr/bin/node /opt/bin/node
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install tools
      run: ./.github/build/linux-musl-${{matrix.architecture}}/install.sh

    - name: Clone dependencies
      run: ./clone-dependencies.sh

    - name: Build
      run: ./.github/build/linux-musl-${{matrix.architecture}}/build.sh

    - name: Prepare artifacts
      run: |
        mkdir -p Artifacts
        cp -r /tmp/dependencies/lib Artifacts
        cp -r /tmp/dependencies/lib64 Artifacts
        cp -r /tmp/dependencies/include Artifacts
        cd Artifacts
        zip -r ../linux-musl-${{matrix.architecture}}-static.zip .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-musl-${{matrix.architecture}}-static
        path: linux-musl-${{matrix.architecture}}-static.zip

  release:
    name: Create release
    if: github.event_name == 'workflow_dispatch'
    runs-on: windows-2022
    needs:
      - build_linux_musl_arm64

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/download-artifact@v5
      name: Download artifacts
      with:
        path: ${{ github.workspace }}/Artifacts
        merge-multiple: true

    - name: Set release number
      shell: bash
      run: echo "release=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_ENV

    - name: Create and push tag
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag $release
        git push origin $release

    - name: Publish release
      shell: cmd
      env:
        GH_TOKEN: ${{github.token}}
      run: gh release create ${{env.release}} --title "Release ${{env.release}}" ${{github.workspace}}\Artifacts\*.zip
