on:
  workflow_dispatch:

name: Create release
jobs:
  build_windows:
    name: Build Windows ${{matrix.platform}} ${{matrix.type}} ${{matrix.openmp}}
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        platform: [ x64, arm64, x86 ]
        type: [ dynamic, static ]
        openmp: [ openMP, noOpenMP ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clone dependencies
      shell: cmd
      run: CloneDependencies.cmd

    - name: Build configure
      shell: cmd
      working-directory: ImageMagick-Windows\Configure
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        msbuild Configure.sln /m /t:Rebuild /p:Configuration=Release,Platform=x64
        copy Artifacts\Release\x64\bin\Configure.Release.x64.exe Configure.Release.x64.exe

    - name: Run configure
      shell: cmd
      working-directory: ImageMagick-Windows\Configure
      run: |
        Configure.Release.x64.exe /noWizard /VS2022 /${{ matrix.platform }} /${{ matrix.type }} /${{ matrix.openmp }}

    - name: Build dependencies
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cd ImageMagick-Windows
        msbuild IM7.${{ matrix.type }}.${{matrix.platform}}.sln /m /t:Rebuild /p:Configuration=Release,Platform=${{matrix.platform}}

    - name: Prepare artifacts
      shell: cmd
      run: |
        mkdir Artifacts
        robocopy "ImageMagick-Windows\Artifacts" "Artifacts" *.dll *.lib *.h *.txt /S /COPYALL /NP
        if %ERRORLEVEL% NEQ 1 (
          echo Error: robocopy failed with exit code %ERRORLEVEL%
          exit /b 1
        )
        powershell -Command "Compress-Archive -Path 'Artifacts\*' -DestinationPath '${{ matrix.platform }}-${{ matrix.type }}-${{ matrix.openmp }}.zip'"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-${{ matrix.type }}-${{ matrix.openmp }}
        path: ${{ matrix.platform }}-${{ matrix.type }}-${{ matrix.openmp }}.zip

  release:
    name: Create release
    runs-on: windows-2022
    needs: build_windows

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      name: Download executables
      with:
        path: ${{ github.workspace }}/Artifacts
        merge-multiple: true

    - name: Set release number
      shell: bash
      run: echo "release=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_ENV

    - name: Create and push tag
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag $release
        git push origin $release

    - name: Publish release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ env.release }}
        tag_name: ${{ env.release }}
        files: |
          ${{ github.workspace }}/Artifacts/x64-dynamic-noOpenMP.zip
          ${{ github.workspace }}/Artifacts/x64-dynamic-openMP.zip
          ${{ github.workspace }}/Artifacts/x64-static-noOpenMP.zip
          ${{ github.workspace }}/Artifacts/x64-static-openMP.zip
          ${{ github.workspace }}/Artifacts/arm64-dynamic-noOpenMP.zip
          ${{ github.workspace }}/Artifacts/arm64-dynamic-openMP.zip
          ${{ github.workspace }}/Artifacts/arm64-static-noOpenMP.zip
          ${{ github.workspace }}/Artifacts/arm64-static-openMP.zip
          ${{ github.workspace }}/Artifacts/x86-dynamic-noOpenMP.zip
          ${{ github.workspace }}/Artifacts/x86-dynamic-openMP.zip
          ${{ github.workspace }}/Artifacts/x86-static-noOpenMP.zip
          ${{ github.workspace }}/Artifacts/x86-static-openMP.zip
